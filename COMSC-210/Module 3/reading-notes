In the last module we learned all about arrays and classes, but we had to change this code for different data types. This is where vector comes in. It is very similar to an array, but a vector can hold different data types. Arrays use stack memory and vectors use dynamic memory, Therefore, arrays are more efficient. Arrays were added in C++11. We learned about the Templated Array Class, and how to define one. The template allows the program to create a new version of the array when it is called. It's important to be very careful when using array templates because it's easy to make syntax errors that are not detected. There are also variations to the template name. If you have different data types in the array, you can use multiple typenames. The capacity of the array is limited, as it is allocated when the program starts. Typically 1mb, or a 100,000 capacity. We can put templates in a header file, and should be named the same as the class, by convention.